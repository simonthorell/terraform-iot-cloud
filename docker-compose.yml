services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    environment:
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - ./api/dist:/dist

  nuxt-frontend:
    container_name: nuxt-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    volumes:
      - ./frontend/dist:/app/dist

  terraform:
    container_name: terraform
    build:
      context: ./terraform
      dockerfile: Dockerfile
    environment:
      - TF_VAR_aws_account_id=${AWS_ACCOUNT_ID}
      - TF_VAR_aws_region=${AWS_DEFAULT_REGION}
      - TF_VAR_aws_access_key_id=${AWS_ACCESS_KEY_ID}
      - TF_VAR_aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
      - TF_VAR_discord_webhook_url=${DISCORD_WEBHOOK_URL}
    volumes:
      - .:/workspace
    working_dir: /workspace/terraform
    entrypoint: ["/workspace/terraform/entrypoint.sh"]

  esp32-rust:
    image: espressif/idf-rust:esp32c3_latest
    container_name: esp32c3_rust_dev
    working_dir: /workspace
    environment:
      - DEVICE_ID=${DEVICE_ID}
      - OWNER_NAME=${OWNER_NAME}
      - WIFI_SSID=${WIFI_SSID}
      - WIFI_PASSWORD=${WIFI_PASSWORD}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_PUB_TOPIC=${MQTT_PUB_TOPIC}
      - MQTT_SUB_TOPIC=${MQTT_SUB_TOPIC}
    volumes:
      - ./iot-device/esp32c3:/workspace
      - ./iot-device/.certs/root_ca.pem:/certs/root_ca.pem
      - ./iot-device/.certs/iot_cert.pem:/certs/iot_cert.pem
      - ./iot-device/.certs/iot_private_key.pem:/certs/iot_private_key.pem
      - ./iot-device/.certs/iot_endpoint.txt:/certs/iot_endpoint.txt
    command: sh -c "cargo build --release"

  localstack:
    container_name: localstack
    image: localstack/localstack
    environment:
      - SERVICES=iot,dynamodb,amplify,s3,iam # Mock AWS services
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
    ports:
      - "4566:4566" # LocalStack gateway for AWS CLI & SDKs
      - "4567:4567" # LocalStack S3

  iot-client:
    container_name: iot-client
    build:
      context: .
      dockerfile: ./iot-device/virtual-device/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./iot-device/.certs/root_ca.pem:/certs/root_ca.pem
      - ./iot-device/.certs/iot_cert.pem:/certs/iot_cert.pem
      - ./iot-device/.certs/iot_private_key.pem:/certs/iot_private_key.pem
      - ./iot-device/.certs/iot_endpoint.txt:/certs/iot_endpoint.txt
